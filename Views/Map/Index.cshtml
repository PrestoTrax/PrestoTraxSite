@model List<RecordModel>
<html>
    <head>
        <script src='https://api.mapbox.com/mapbox-gl-js/v2.6.1/mapbox-gl.js'></script>
        <link href='https://api.mapbox.com/mapbox-gl-js/v2.6.1/mapbox-gl.css' rel='stylesheet' />
        <style>
            #map {
                position: relative;
                top: 15%;
                min-height: 325px;
                max-height: 1500px;
                min-width: 625px;
                max-width: 2700px;
                display: inline-block;
            }
            img{
                width: 5px;
                height: 5px;
            }
            #dynaMap {
                display:inline-block; 
                float: right;
            }
        </style>
    </head>
    <body>
        <div id="map"></div>
        <div id="dynaMap">
            @{await Html.RenderPartialAsync("_MapComponent", @Model);}
        </div>
        <div>
            <label for="currentLocMarker">Recent Locations:</label>
            <img src="../images/black-x.png" id="currentLocMarker" />
            <label for="centerLocMarker">Map Center</label>
            <img src="../images/x-mark-16.png" id="centerLocMarker" />
        </div>
        <div id="currLoc" style="padding: 2px;">
            <p>Map Center Location:</p>
            <p id="currentLocation"></p>
        </div>
        <button id="centerButton" onclick="goToCenter()">Jump to Device Location</button>
        <script src="~/lib/jquery/dist/jquery.min.js"></script>
        <script type="text/javascript">
            mapboxgl.accessToken = 'pk.eyJ1IjoibWF4MW11czciLCJhIjoiY2wxY3ZrNm5iMGJsODNibXJwaXF0ZzhnbCJ9.GcVTiVAeOU0yQPPWiT-Lww';
            var map = new mapboxgl.Map({
                    container: 'map',
                    style: 'mapbox://styles/max1mus7/cl1cvqqsl008c14nxldoun4vu',
                    center: [@Model[0].DeviceLongitude, @Model[0].DeviceLatitude],
                    zoom: 15
            });
            var marker = new mapboxgl.Marker({color: "#ED0000"}).setLngLat([@Model[0].DeviceLongitude, @Model[0].DeviceLatitude]).addTo(map);
            var img = document.createElement('img');
            img.src="../images/x-mark-16.png";
            var centerMarker = new mapboxgl.Marker(img).setLngLat(map.getCenter()).addTo(map);
            map.on("render", (e) => {
                 let el = document.getElementById("currentLocation");
                 let lngLat = map.getCenter();
                 let lng = (lngLat.lng + '').split('.')[0] + '.' + (lngLat.lng + '').split('.')[1].slice(0,4);
                 let lat = (lngLat.lat + '').split('.')[0] + '.' + (lngLat.lat + '').split('.')[1].slice(0,4);
                 centerMarker.setLngLat(lngLat);
                 el.innerText = `Latitude: ${lat}, Longitude: ${lng}`;
            });
            
            let currLoc = [@Model[0].DeviceLongitude, @Model[0].DeviceLatitude];
            let markerArray = [];
            function plotRecentLocs(records){
                markerArray = [];
                for(let i = 0; i < records.length; i++) {
                    img = document.createElement('img');
                    img.src="../images/black-x.png";
                    markerArray.push(new mapboxgl.Marker(img).setLngLat([records[i].deviceLongitude, records[i].deviceLatitude]).addTo(map));
                }
            }
            function getCurrent(records){
                if(markerArray.length > 0){
                    for(let i = 0; i < markerArray.length; i++){
                        markerArray[i].remove();
                    }
                }
                //console.log(map.listImages());
                marker.setLngLat([records[0].deviceLongitude, records[0].deviceLatitude]);
                
                currLoc = [records[0].deviceLongitude, records[0].deviceLatitude];
                plotRecentLocs(records);
                //console.log(currLoc);
            }
            
            function goToCenter(){
                console.log('click');
                console.log(currLoc);
                map.panTo(currLoc);
            }
            
            function loadMap() {
                $.ajax({
                    url: '@Url.Action("GetRecordsAsync", "Map")',
                    type: 'get',
                    cache: false,
                    async: true,
                    //data: { id: "frmUser" },
                    success: function(result){
                        getCurrent(result);
                    }
                });

            $.ajax({
                url: '@Url.Action("GetMapComponent", "Map")',
                type: 'get',
                cache: false,
                async: true,
                //data: { id: "frmUser" },
                success: function(result){
                    console.log("refreshTabl");
                    $("#dynaMap").html(result);
                    //$('#dynaMap').load(result);
                }
            });
            }
            
            $(document).ready(function(){
                loadMap();
                function RefreshPartial(){
                    //this will wait 3 seconds and then fire the load partial function
                    setTimeout(function(){
                        loadMap();
                        //recall this function so that it will continue to loop
                        RefreshPartial();
                    }, 10000);
                }
                //initialize the loop
            RefreshPartial();
            
            }); 
        </script>
    </body>
</html>
